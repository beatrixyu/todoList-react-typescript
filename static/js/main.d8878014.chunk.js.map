{"version":3,"sources":["components/ToDoList.tsx","components/NewToDo.tsx","App.tsx","index.tsx"],"names":["ToDoList","props","items","map","todo","key","id","value","text","onClick","onDelete","bind","NewToDoList","textInputRef","useRef","onSubmit","event","preventDefault","enteredText","current","onAddTodo","className","htmlFor","type","ref","App","useState","todos","setTodos","NewToDo","prevTodos","Math","random","toString","todoId","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oKAoBeA,EAb0B,SAACC,GACtC,OACI,4BACKA,EAAMC,MAAMC,KACT,SAAAC,GAAI,OAAI,wBAAIC,IAAKD,EAAKE,GAAIC,MAAOH,EAAKI,MACjCJ,EAAKI,KACN,4BAAQC,QAASR,EAAMS,SAASC,KAAK,KAAMP,EAAKE,KAAhD,gBCaLM,EApB6B,SAACX,GAEzC,IAAMY,EAAeC,iBAAyB,MAO9C,OACI,0BAAMC,SANgB,SAACC,GACvBA,EAAMC,iBACN,IAAMC,EAAcL,EAAaM,QAASZ,MAC1CN,EAAMmB,UAAUF,KAIZ,yBAAKG,UAAU,gBACX,2BAAOC,QAAQ,cACf,2BAAOC,KAAK,OAAOjB,GAAG,YAAYkB,IAAKX,KAE3C,4BAAQU,KAAK,UAAb,SCKGE,EArBO,WAAM,MAGAC,mBAAiB,IAHjB,mBAGnBC,EAHmB,KAGZC,EAHY,KAa1B,OACE,6BACA,kBAACC,EAAD,CAAaT,UAXQ,SAACZ,GACtBoB,GAAS,SAAAE,GAAS,4BAAMA,GAAN,CAAgB,CAAExB,GAAIyB,KAAKC,SAASC,WAAYzB,KAAKA,WAWrE,kBAAC,EAAD,CAAUN,MAAOyB,EAAOjB,SARF,SAACwB,GACzBN,GAAS,SAAAE,GACP,OAAOA,EAAUK,QAAO,SAAA/B,GAAI,OAAIA,EAAKE,KAAO4B,aCXlDE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.d8878014.chunk.js","sourcesContent":["import React from 'react';\n\ninterface ToDoListProp {\n    items: { id: string, text: string }[]\n    onDelete: (id: string) => void\n}\n\nconst ToDoList: React.FC<ToDoListProp> = (props) => {\n    return (\n        <ul>\n            {props.items.map(\n                todo => <li key={todo.id} value={todo.text}>\n                    {todo.text}\n                    <button onClick={props.onDelete.bind(null, todo.id)}>Delete</button>\n                </li>\n            )}\n        </ul>\n    )\n}\n\nexport default ToDoList;\n\n\n","import React, {useRef} from 'react';\n\ntype NewToDoProps = {\n    onAddTodo: (todoText: string) =>void\n}\n\nconst NewToDoList: React.FC<NewToDoProps> = (props) => {\n\n    const textInputRef = useRef<HTMLInputElement>(null)\n    \n    const todoSubmitHandler = (event:React.FormEvent)=> {\n        event.preventDefault()\n        const enteredText = textInputRef.current!.value\n        props.onAddTodo(enteredText)\n    }\n    return (\n        <form onSubmit={todoSubmitHandler}>\n            <div className=\"form-control\">\n                <label htmlFor=\"todo-text\"></label>\n                <input type=\"text\" id=\"todo-text\" ref={textInputRef}/>\n            </div>\n            <button type=\"submit\" >Add</button>\n        </form>\n    )\n}\n\nexport default NewToDoList;","import React,{useState} from 'react';\nimport ToDoList from \"./components/ToDoList\"\nimport NewToDoList from \"./components/NewToDo\"\nimport { Todo } from \"./Todo.modal\"\n\nconst App: React.FC = () => {\n\n  // const todos = [{id:\"t1\", text:\"to finish the course\"}]\n  const [todos, setTodos] = useState<Todo[]>([])\n  const todoAddHandler = (text:string) => {\n    setTodos(prevTodos=>[...prevTodos,{ id: Math.random().toString(), text:text}])\n  }\n\n  const deleteTodoHandler = (todoId: string) => {\n    setTodos(prevTodos => {\n      return prevTodos.filter(todo => todo.id !== todoId);\n    })\n  }\n  return(\n    <div>\n    <NewToDoList onAddTodo={todoAddHandler} />\n      <ToDoList items={todos} onDelete={deleteTodoHandler}/>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}